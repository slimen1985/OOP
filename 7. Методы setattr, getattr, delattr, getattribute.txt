1. Класс - это некое пространство имен со своими свойствами и методами. Эти свойства и методы
являются аттрибутами класса. И далее, когда мы создаем экземпляры класса, они остаются
непосредственно в этом классе и не копируются в отдельные экземпляры.
Аттрибуты класса являются общими для всех его экземпляров. При этом, из этих вот
экземпляров мы можем спокойно обращаться к этим аттрибутам
2. Чтобы обратиться к аттрибутам класса внутри какого-либо метода, необходимо указать
пространство имен (либо класса Point, либо экземпляр класса).
3. Если нам нужно изменить в методе аттрибут, то нам необходимо обратиться к этому
аттрибуту через параметр self.<attr> и присвоить ему значение. Пропишем перед методом
декоратор @classmethod и тем самым мы обращаемся непосредственно к аттрибуту класса
4. Магический метод __getattribute__(self, item). item - это аттрибут, к которому идет
обращение. Он вызывается, когда идет считывание аттрибута через экземпляр класса.
Чтобы он отработал корректно, мы должны обратиться к классу object, от которого не явно
наследуются все классы в пайтон. Он должен возвращать значение этого аттрибута
 return object.__getattribute__(self, item).
 5. Магический метод __setattr__(self, key, value) Он автоматический вызывается каждый раз,
 когда идет присваение какому-либо аттрибуту определенного значения.
 Вызывается этот метод через класс object.
 При помощи этого метода мы можем запретить создавать локальный аттрибут в экземпляре класса.
 6. Магический метод __getattr__(self, item) вызывается автоматически каждый раз, когда идет
 обращение к несуществующему аттрибуту экземпляра класса. Если идет обращение к несуществующему
 экземпляру класса, то пусть возвращается значение False, а не генерирутеся исключение.
 7. Магический метод __delattr_(self, item) вызывается каждый раз, когда удаляется определенный
 аттрибут из экземпляра класса. Чтобы произошло удаление, мы должны обратиться к базовому классу
 object.__delattr__(self, item) и вызвать его, передав 2 параметра.
